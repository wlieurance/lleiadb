% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import.R
\name{to.db}
\alias{to.db}
\title{This is the top-level inserting function for all source data. It determines
insert order and constructs parameters needed for the table-level insert
functions \code{dbbind.insert} and \code{rowwise.insert}}
\usage{
to.db(
  tbls,
  update,
  dbkey,
  desc,
  path,
  hash,
  verbose = FALSE,
  log = NULL,
  named = FALSE,
  chunk.size = 1000
)
}
\arguments{
\item{tbls}{A list of tables produced by \code{get.src.tables()}}

\item{update}{logical. A flag that instructs the function to construct an
UPSERT statement instead of an INSERT statement.}

\item{dbkey}{A string. Serves as a unique key for the database source which
will identify data in the destination DB as coming from a specific source.}

\item{desc}{A string. The description the will be used to describe the source
database contents which are imported into the Postgres destination.}

\item{path}{A string file path pointing to the the source database to import.}

\item{hash}{A string. The md5hash of the database, produced via
\code{get.key()}}

\item{verbose}{logical. A flag telling the function to be more verbose in
its messaging.}

\item{log}{A string file path location of the log file to write
results to.}

\item{named}{logical. A flag that tells the function to default to construct
the INSERT statement using the glue::glue syntax and insert the data into
the database row-wise (one row at a time).}

\item{chunk.size}{An integer.This tells the function how many rows to
attempt to insert at once. Failure on a chunk will cause the function
to default to row-wise inserts for the entire chunk.}
}
\description{
This is the top-level inserting function for all source data. It determines
insert order and constructs parameters needed for the table-level insert
functions \code{dbbind.insert} and \code{rowwise.insert}
}
