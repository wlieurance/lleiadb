% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lpi_calc.R
\name{calc.indicators}
\alias{calc.indicators}
\title{This function will take a point intercept data data (either wide or long)
and calculate cover, height, and \% dead indicators based on the filter
strings evaluated as an expression on the raw table.}
\usage{
calc.indicators(name = NULL, filter.exp = NULL, calc.type, hits, ptcount)
}
\arguments{
\item{name}{A string. The name of the indicator.}

\item{filter.exp}{A string. A \code{dpylr::filter()} expression
(or union-ed set thereof) which is used to filter the table.}

\item{calc.type}{A string. The table type on which to perform the filter
expression.}

\item{hits}{A tibble. The table to perform the filter on.}

\item{ptcount}{A tibble which contains two fields,"reckey" and "pt_count",
the former a string field containing a unique set of record keys and the
latter an integer field containing the number of complete points for that
record.}
}
\value{
A tibble, with the \code{filter.exp} applied to \code{hits}
}
\description{
This function will take a point intercept data data (either wide or long)
and calculate cover, height, and \% dead indicators based on the filter
strings evaluated as an expression on the raw table.
}
\examples{
calc.indicators("tree", 'dplyr::filter(hits, growth_habit_first ==
  "Tree", "long", pintercept.long')
}
